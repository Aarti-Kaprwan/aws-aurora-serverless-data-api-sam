AWSTemplateFormatVersion: '2010-09-09'
Description: Provisions AWS resources for the Simple EC2 Inventory sample solution on AWS
Transform: 'AWS::Serverless-2016-10-31'
Parameters:
  AppName:
    Description: "Application Name"
    Type: String
    Default: simple-ec2-inventory
  EnvType:
    Description: "Environment type (eg, dev, qa, prod)"
    Type: String
    Default: dev
  DBName:
    Description: "RDS Database Name"
    Type: String
    Default: ec2_inventory_db
  DBClusterARN:
    Description: "RDS Database cluster ARN"
    Type: String
  DBCredSecretsStoresArn:
    Description: "RDS Database admin credentials secrets store secret ARN"
    Type: String
  EC2TableName:
    Description: "EC2 Table name"
    Type: String
    Default: ec2
  PackageTableName:
    Description: "Package Table name"
    Type: String
    Default: package
  EC2PackageTableName:
    Description: "EC2-Package Table name"
    Type: String
    Default: ec2_package
Globals:
  Function:
    Runtime: python3.6
    Timeout: 120
    MemorySize: 256
    Environment:
      Variables:
        EC2_TABLE_NAME: !Ref EC2TableName
        PACKAGE_TABLE_NAME: !Ref PackageTableName
        EC2_PACKAGE_RPM_TABLE_NAME: !Ref EC2PackageTableName
        DB_NAME: !Ref DBName
        DB_CLUSTER_ARN: !Ref DBClusterARN
        DB_CRED_SECRETS_STORE_ARN: !Ref DBCredSecretsStoresArn
  Api:
    EndpointConfiguration: REGIONAL
Resources:
  AddEC2InfoLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Description: Adds EC2 info to the inventory
      FunctionName: !Sub "${EnvType}-${AppName}-add-ec2-to-inventory-lambda"
      Handler: add_ec2_info.handler
      CodeUri: ../lambdas/
      Events:
        AMIPost:
          Type: Api
          Properties:
            Path: '/ec2/{aws_instance_id}'
            Method: post
      Policies:
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
                - rds-data:ExecuteSql
                - secretsmanager:GetSecretValue
              Resource: '*'
  GetEC2InfoLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Description: Retrieves EC2 info from the inventory
      FunctionName: !Sub "${EnvType}-${AppName}-find-ami-lambda"
      Handler: get_ec2_info.handler
      CodeUri: ../lambdas/
      Events:
        AMIPost:
          Type: Api
          Properties:
            Path: '/ami/{aws_instance_id}'
            Method: get
      Policies:
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
                - rds-data:ExecuteSql
                - secretsmanager:GetSecretValue
              Resource: '*'
