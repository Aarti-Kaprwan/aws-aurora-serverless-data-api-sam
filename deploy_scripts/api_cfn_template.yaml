AWSTemplateFormatVersion: '2010-09-09'
Description: Provisions AWS Serverless API resourcs for the Simple EC2 Inventory sample solution on AWS
Transform: 'AWS::Serverless-2016-10-31'
Parameters:
  AppName:
    Description: "Application Name"
    Type: String
    Default: simple-ec2-inventory
  EnvType:
    Description: "Environment type (eg, dev, qa, prod)"
    Type: String
    Default: dev
  DatabaseStackName:
    Description: "Name of the RDS CloudFormation stack to import parameters from"
    Type: String
    Default: ec2_inventory_db
  EC2TableName:
    Description: "EC2 Table name"
    Type: String
    Default: ec2
  PackageTableName:
    Description: "Package Table name"
    Type: String
    Default: package
  EC2PackageTableName:
    Description: "EC2-Package Table name"
    Type: String
    Default: ec2_package
  ApiStageName:
    Description: "API Stage Name"
    Type: String
    Default: dev
  LambdaLogLevel:
    Description: "Log verbosity level for Lambda functions"
    Type: String
    Default: info
Globals:
  Function:
    Runtime: python3.6
    Timeout: 120
    MemorySize: 256
    AutoPublishAlias: live
    Environment:
      Variables:
        LOG_LEVEL: !Ref LambdaLogLevel
        EC2_TABLE_NAME: !Ref EC2TableName
        PACKAGE_TABLE_NAME: !Ref PackageTableName
        EC2_PACKAGE_RPM_TABLE_NAME: !Ref EC2PackageTableName
        DB_NAME:
          Fn::ImportValue:
            !Sub "${DatabaseStackName}-DatabaseName"
        DB_CLUSTER_ARN:
          Fn::ImportValue:
              !Sub "${DatabaseStackName}-DatabaseClusterArn"
        DB_CRED_SECRETS_STORE_ARN:
          Fn::ImportValue:
              !Sub "${DatabaseStackName}-DatabaseSecretArn"
  Api:
    Name: !Sub "${EnvType}-${AppName}-api"
    EndpointConfiguration: REGIONAL
Resources:
  EC2InventoryAPI:
    Type: 'AWS::Serverless::Api'
    Properties:
        StageName: !Sub "${ApiStageName}"
        TracingEnabled: True
  AddEC2InfoLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Description: Adds EC2 info to the inventory
      FunctionName: !Sub "${EnvType}-${AppName}-add-ec2-lambda"
      CodeUri: ../lambdas/
      Handler: add_ec2_info.handler
      Tracing: Active
      Events:
        EC2PostEvent:
          Type: Api
          Properties:
            Path: '/ec2/{aws_instance_id}'
            Method: post
            RestApiId: !Ref EC2InventoryAPI
      Policies:
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
                - rds-data:*
              Resource:
                Fn::ImportValue:
                  !Sub "${DatabaseStackName}-DatabaseClusterArn"
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource:
                Fn::ImportValue:
                  !Sub "${DatabaseStackName}-DatabaseSecretArn"
            - Effect: Allow
              Action:
                - xray:PutTraceSegments
                - xray:PutTelemetryRecords
              Resource: "*"
  GetEC2InfoLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Description: Retrieves EC2 info from the inventory
      FunctionName: !Sub "${EnvType}-${AppName}-get-ec2-lambda"
      CodeUri: ../lambdas/
      Handler: get_ec2_info.handler
      Tracing: Active
      Events:
        EC2GetEvent:
          Type: Api
          Properties:
            Path: '/ec2/{aws_instance_id}'
            Method: get
            RestApiId: !Ref EC2InventoryAPI
      Policies:
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
                - rds-data:ExecuteSql
              Resource:
                Fn::ImportValue:
                  !Sub "${DatabaseStackName}-DatabaseClusterArn"
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource:
                Fn::ImportValue:
                  !Sub "${DatabaseStackName}-DatabaseSecretArn"
            - Effect: Allow
              Action:
                - xray:PutTraceSegments
                - xray:PutTelemetryRecords
              Resource: "*"
Outputs:
  StackName:
    Description: API Stack Name
    Value: !Ref AWS::StackName
    Export:
      Name: !Sub ${AWS::StackName}-StackName

  ApiEndpoint:
    Description: API Stage Endpoint
    Value: !Sub "https://${EC2InventoryAPI}.execute-api.${AWS::Region}.amazonaws.com/${EnvType}"
    Export:
      Name: !Sub ${AWS::StackName}-ApiEndPoint